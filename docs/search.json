[{"path":"index.html","id":"hajimeni","chapter":"はじめに","heading":"はじめに","text":"本書『Rで読むExcelファイル』を書こうと思ったのは「RとRStudioを使いたい！と思う人がもっと増えればいいのに」という願いからです。使う人が多くなれば、新しい知識に出会いやすくなりますし、仕事でも使う機会が増える可能性があります。使う人を増やすためにはよい入門書やwebサイトが必要ですが、それは巷にあふれていて無料でアクセスできるものも多いです。例えばR Data Science（英語） 1日本社会心理学会　第5回春の方法論セミナー　RとRstudio入門 2そこで本書では目的を絞って、R（実際はすべてRStudioから使います）を使いたいと思わせる部分を解説することを目指します。Rでどんな便利なことができるか、入門書などでもあまり深く解説されてない部分にフォーカスして紹介します。","code":""},{"path":"index.html","id":"本書の特徴","chapter":"はじめに","heading":"本書の特徴","text":"便利なことといってもいろいろあるので、その中でも、つまづくと嫌になってしまうことの多そうな、「手元のExcelファイルを読み込む」所に着目しました。このトピックだけをRのいわゆるモダンな方法を使って重点的に解説した資料は、筆者の知る範囲では見つけられてないので、本書の最も際立った特徴といえます。また、関連するファイル形式として、csvファイルの読み書きも少しだけ触れています。こちらはつまづくことの多いであろう文字コードについても解説しました。解析したいデータが、綺麗な一つにまとまったデータばかりとは限りません。たとえば、会社の部署ごとに分かれたデータなど、解析に持っていくまでに大量のファイルを読みこまなければいけない場合もあります。その読み込みの際にいかに楽をできるかという点を意識しています。データさえスムーズに読み込めれば、後はすぐれた解説がネット上でもたくさんあり、やりたいことが可能になる環境が整うからです。Excelファイルをただ読みこむといってもいろんなバリエーションが考えられます。その単なる読みこみプロセスを通じて、Rを使う上で便利な関数や手続きを学ぶこともできるでしょう。戦いの中で自然に強くなった的な効果も見込めるかもしれません。本書の内容は、githubレポジトリの https://github.com/izunyan/excel_r ですべて公開しています。コードやサンプルデータはこちらのレポジトリをダウンロードしてお試しください。pdf版が読みたい方は、以下のページで無料で入手可能です。自力でできる方は、Build Bookでも作成できます。技術書典マーケットの販売ページ\nhttps://techbookfest.org/product/4794168259903488?productVariantID=5913872206659584\nhttps://techbookfest.org/product/4794168259903488?productVariantID=5913872206659584","code":""},{"path":"index.html","id":"想定読者","chapter":"はじめに","heading":"想定読者","text":"色々なExcelファイルを読み込んで分析する機会があるのであれば、全くRのことを知らない方から、少しRの経験があるけど複数のファイルを一度に読みこんだことはないというレベルの方ぐらいまでが対象となるでしょう。本書の到達目標は、RでのExcelファイルの読み書きレベルをある程度高める、という所に定めました。その先は是非好きなように可視化なり解析なり進めていただければと思います。とはいえ、そこでお好きなように！と言われても路頭に迷う方もいるかもしれないので、データの内容把握に関して、要約値や欠損値の一覧、簡単な可視化、相関の一覧についても少しだけ解説しました。その一助として、特別付録として本書と並行してまとめた、可視化のためのggplot2の辞書（特別付録について参照）もあります。なお、データをきれいにする過程（例：前処理、データクリーニング、データクレンジング、データラングリングなど）については多くの説明を要するため、本書の範囲を超えます。これはまた別機会にまとめられたらなと思っています。まず1章では、RStudioでファイルを読み書きする際に、最低限知っておいた方がよい知識について解説しておきます。とっつきにくいかもしれませんが、知っておいてよかったと後になって実感する類のものなので、使って慣れていきましょう。??章は本書のメインであるExcelファイルの読み込みについて解説します。一つのファイルの読み込みから、複数シート、複数ファイルの読み込みまで、様々なシーンに対応しました。また、読みこんだファイルを一つのデータフレーム3にまとめる方法についても触れています。章はExcelファイルの保存についてです。ここでも、一つのファイルの保存から、複数ファイルの保存まで解説します。ここまでの内容が理解できれば、大量ファイルの読み書きにまつわる単純な繰り返し作業とはさよならできるでしょう。章は関連知識としてcsvファイルの読み込みと保存について解説します。windowsユーザーは文字コードの違いによる文字化けというつらみと対峙することになり、初学者はここで脱落していくことが多いのではないかと思います。そのために、サバイバルスキルとして知っておくことが有用だと思い書いておきました。自分が相当苦しんだので…章は、読み込んだファイルの特徴をざっと把握する方法について解説しました。ここまでやれば、（きれいなデータであれば！）きっとデータ解析に入っていくことができるでしょう。","code":""},{"path":"index.html","id":"執筆環境","chapter":"はじめに","heading":"執筆環境","text":"本書はbookdownにて執筆しました 4本書はbookdownにて執筆しました 4RおよびRStudio、パッケージのバージョン\nR version 3.6.1\nRStudio version 1.3.1073\nreadxl version 1.3.1\ntidyverse version 1.3.0\nRおよびRStudio、パッケージのバージョンR version 3.6.1RStudio version 1.3.1073readxl version 1.3.1tidyverse version 1.3.0","code":""},{"path":"index.html","id":"注意事項など","chapter":"はじめに","heading":"注意事項など","text":"本書の内容はすべてwindows環境を想定しています。本書の内容はすべてwindows環境を想定しています。この本に書いてある内容は、筆者が学習したことをまとめているものにすぎないため、正常な動作の保証はできません。使用する際は、自己責任でお願いします。この本に書いてある内容は、筆者が学習したことをまとめているものにすぎないため、正常な動作の保証はできません。使用する際は、自己責任でお願いします。","code":""},{"path":"index.html","id":"huroku","chapter":"はじめに","heading":"特別付録について","text":"本書の執筆に先駆けて、順序が違う気がしますがまず付録の作成からはじめました。特別付録は以下でアクセス可能なオンライン付録となります。ggplot2の辞書\nhttps://izunyan.github.io/practice_ggplot2/\nhttps://izunyan.github.io/practice_ggplot2/Twitterで応援してもらったら項目が増えていく仕様にしているので、もっと読みたい方はこちらのツイートに何らかのレスポンスください！","code":""},{"path":"select.html","id":"select","chapter":"1 変数（列）を選ぶ","heading":"1 変数（列）を選ぶ","text":"パッケージdplyrの関数select()tidyな世界では「列名 = 変数名」変数が多い時に関心ある変数に限定したデータにしたい関心ある変数の名前を取得したいヘルパー関数が後で役立つ","code":""},{"path":"select.html","id":"select_read","chapter":"1 変数（列）を選ぶ","heading":"1.1 データ読み込み","text":"読み込みの様々な方法については拙書『Rで読むExcelファイル』参照","code":"\nlibrary(tidyverse)\nlibrary(readxl)\n\n# 繝代ャ繧ｱ繝ｼ繧ｸ縺悟<85>･縺｣縺ｦ縺ｪ縺代ｌ縺ｰ荳玖ｨ伜ｮ溯｡<8c>NA# install.packages(\"palmerpenguins\")\n\n\ndf <- \n  palmerpenguins::penguins\n  \ndf # 繝<87>繝ｼ繧ｿ縺ｮ陦ｨ遉ｺ NA## # A tibble: 344 x 8\n##   species island    bill_length_mm bill_depth_mm flipper_length_~\n##   <fct>   <fct>              <dbl>         <dbl>            <int>\n## 1 Adelie  Torgersen           39.1          18.7              181\n## 2 Adelie  Torgersen           39.5          17.4              186\n## 3 Adelie  Torgersen           40.3          18                195\n## # ... with 341 more rows, and 3 more variables:\n## #   body_mass_g <int>, sex <fct>, year <int>"},{"path":"select.html","id":"select1","chapter":"1 変数（列）を選ぶ","heading":"1.2 基本","text":"select( )の中に関心のある変数名を,をつけて並べる\n変数は1つからOK\n変数は1つからOK新しいデータフレームを作りたい場合は<-を使って新しいオブジェクトに格納する","code":"\ndf %>% \n  select(bill_length_mm, bill_depth_mm)## # A tibble: 344 x 2\n##   bill_length_mm bill_depth_mm\n##            <dbl>         <dbl>\n## 1           39.1          18.7\n## 2           39.5          17.4\n## 3           40.3          18  \n## # ... with 341 more rows\ndf2 <- \n  df %>% select(bill_length_mm)\n\ndf2## # A tibble: 344 x 1\n##   bill_length_mm\n##            <dbl>\n## 1           39.1\n## 2           39.5\n## 3           40.3\n## # ... with 341 more rows"},{"path":"select.html","id":"select_range","chapter":"1 変数（列）を選ぶ","heading":"1.2.1 範囲指定","text":"関心ある変数が指定された範囲に含まれていれば:でつなげて取得できる\n変数の連番をまとめて指定する時などに便利（例 変数1:変数100）\n変数の連番をまとめて指定する時などに便利（例 変数1:変数100）範囲に加えて追加の変数を追加できる\n飛び飛びの変数群を選びたいときに有用\n飛び飛びの変数群を選びたいときに有用","code":"\ndf %>% \n  select(bill_length_mm:flipper_length_mm)## # A tibble: 344 x 3\n##   bill_length_mm bill_depth_mm flipper_length_mm\n##            <dbl>         <dbl>             <int>\n## 1           39.1          18.7               181\n## 2           39.5          17.4               186\n## 3           40.3          18                 195\n## # ... with 341 more rows\ndf %>% \n  select(bill_length_mm:flipper_length_mm, sex)## # A tibble: 344 x 4\n##   bill_length_mm bill_depth_mm flipper_length_mm sex   \n##            <dbl>         <dbl>             <int> <fct> \n## 1           39.1          18.7               181 male  \n## 2           39.5          17.4               186 female\n## 3           40.3          18                 195 female\n## # ... with 341 more rows"},{"path":"select.html","id":"select_cha","chapter":"1 変数（列）を選ぶ","heading":"1.2.2 中身が文字でも動く","text":"変数名が\" \"で囲われていると，Rでは文字(character)だと認識されるこれは効率化を図りたいときに重要な特徴select( )の中にたくさんの変数名を並べるより，事前に指定しておき代入した方が読みやすい\n様々なコード例でこの事前指定が多用されるので慣れるとよい\n様々なコード例でこの事前指定が多用されるので慣れるとよいここでvarsは文字ベクトル（vector）のオブジェクトとなっているall_of( )の中に文字ベクトルを指定することで，それぞれの中身を変数名として認識する\n以前使われていたone_ofは現在は非推奨\n以前使われていたone_ofは現在は非推奨","code":"\ndf %>% \n  select(\"bill_length_mm\", \"bill_depth_mm\")## # A tibble: 344 x 2\n##   bill_length_mm bill_depth_mm\n##            <dbl>         <dbl>\n## 1           39.1          18.7\n## 2           39.5          17.4\n## 3           40.3          18  \n## # ... with 341 more rows\n# 縺ゅｉ縺九§繧√が繝悶ず繧ｧ繧ｯ繝茨ｼ医％縺薙〒縺ｯvarsｼ峨↓蠑墓焚繧呈ｼ邏阪＠縺ｦ蠕後〒菴ｿ縺医ｋNAvars <- c(\"bill_length_mm\", \"bill_depth_mm\")\n\ndf %>% \n  select(all_of(vars))## # A tibble: 344 x 2\n##   bill_length_mm bill_depth_mm\n##            <dbl>         <dbl>\n## 1           39.1          18.7\n## 2           39.5          17.4\n## 3           40.3          18  \n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper","chapter":"1 変数（列）を選ぶ","heading":"1.3 変数の指定に便利なヘルパー関数","text":"selection helperと呼ばれるtidyselectパッケージの関数群","code":""},{"path":"select.html","id":"select_helper1","chapter":"1 変数（列）を選ぶ","heading":"1.3.1 変数名の最初の文字列","text":"billから始まる変数を選ぶ","code":"\ndf %>%\n  select(starts_with(\"bill\"))## # A tibble: 344 x 2\n##   bill_length_mm bill_depth_mm\n##            <dbl>         <dbl>\n## 1           39.1          18.7\n## 2           39.5          17.4\n## 3           40.3          18  \n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper2","chapter":"1 変数（列）を選ぶ","heading":"1.3.2 変数名の最後の文字列","text":"_mmで終わる変数を選ぶ\nmmだけだと他にも含まれる場合が出てくるので，_も含めた方が安全\nmmだけだと他にも含まれる場合が出てくるので，_も含めた方が安全","code":"\ndf %>%\n  select(ends_with(\"_mm\"))## # A tibble: 344 x 3\n##   bill_length_mm bill_depth_mm flipper_length_mm\n##            <dbl>         <dbl>             <int>\n## 1           39.1          18.7               181\n## 2           39.5          17.4               186\n## 3           40.3          18                 195\n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper3","chapter":"1 変数（列）を選ぶ","heading":"1.3.3 変数名のどこかに含まれる文字列","text":"指定した文字列を含んだ変数名を対象とする","code":"\ndf %>%\n  select(contains(\"length\"))## # A tibble: 344 x 2\n##   bill_length_mm flipper_length_mm\n##            <dbl>             <int>\n## 1           39.1               181\n## 2           39.5               186\n## 3           40.3               195\n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper4","chapter":"1 変数（列）を選ぶ","heading":"1.3.3.1 変数名のどこかに含まれる文字列：その2","text":"文字列で__正規表現__が使えるため柔軟な指定が可能ここでは，“length”または”depth”を含む変数名を対象\n|が「または」を意味する\n|が「または」を意味する","code":"\ndf %>%\n  select(matches(\"length|depth\"))## # A tibble: 344 x 3\n##   bill_length_mm bill_depth_mm flipper_length_mm\n##            <dbl>         <dbl>             <int>\n## 1           39.1          18.7               181\n## 2           39.5          17.4               186\n## 3           40.3          18                 195\n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper5","chapter":"1 変数（列）を選ぶ","heading":"1.3.4 上記の組み合わせ","text":"","code":""},{"path":"select.html","id":"select_helper5_1","chapter":"1 変数（列）を選ぶ","heading":"1.3.4.1 かつ","text":"それぞれの条件を両方満たす","code":"\ndf %>%\n  select(starts_with(\"bill\") & contains(\"length\"))## # A tibble: 344 x 1\n##   bill_length_mm\n##            <dbl>\n## 1           39.1\n## 2           39.5\n## 3           40.3\n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper5_2","chapter":"1 変数（列）を選ぶ","heading":"1.3.4.2 または","text":"それぞれの条件をいずれか満たす","code":"\ndf %>%\n  select(starts_with(\"bill\") | contains(\"length\"))## # A tibble: 344 x 3\n##   bill_length_mm bill_depth_mm flipper_length_mm\n##            <dbl>         <dbl>             <int>\n## 1           39.1          18.7               181\n## 2           39.5          17.4               186\n## 3           40.3          18                 195\n## # ... with 341 more rows"},{"path":"select.html","id":"select_helper6","chapter":"1 変数（列）を選ぶ","heading":"1.3.5 数値範囲","text":"","code":"\nnum_range## function (prefix, range, width = NULL, vars = NULL) \n## {\n##     vars <- vars %||% peek_vars(fn = \"num_range\")\n##     if (!is_null(width)) {\n##         range <- sprintf(paste0(\"%0\", width, \"d\"), range)\n##     }\n##     match_vars(paste0(prefix, range), vars)\n## }\n## <bytecode: 0x00000000246d1370>\n## <environment: namespace:tidyselect>"},{"path":"select.html","id":"select_drop","chapter":"1 変数（列）を選ぶ","heading":"1.4 特定の変数を選ばない（落とす）","text":"変数名の前に!をつける複数列を落としたい場合は，!c( )の中に対象の列名を含める","code":"\ndf %>% \n  select(!species)## # A tibble: 344 x 7\n##   island    bill_length_mm bill_depth_mm flipper_length_mm\n##   <fct>              <dbl>         <dbl>             <int>\n## 1 Torgersen           39.1          18.7               181\n## 2 Torgersen           39.5          17.4               186\n## 3 Torgersen           40.3          18                 195\n## # ... with 341 more rows, and 3 more variables:\n## #   body_mass_g <int>, sex <fct>, year <int>\ndf %>% \n  select(!c(bill_length_mm:flipper_length_mm, sex))## # A tibble: 344 x 4\n##   species island    body_mass_g  year\n##   <fct>   <fct>           <int> <int>\n## 1 Adelie  Torgersen        3750  2007\n## 2 Adelie  Torgersen        3800  2007\n## 3 Adelie  Torgersen        3250  2007\n## # ... with 341 more rows"},{"path":"select.html","id":"変数を並び変える","chapter":"1 変数（列）を選ぶ","heading":"1.5 変数を並び変える","text":"","code":""},{"path":"select.html","id":"変数名を変更する","chapter":"1 変数（列）を選ぶ","heading":"1.6 変数名を変更する","text":"","code":""},{"path":"select.html","id":"関心のある変数名を取得する","chapter":"1 変数（列）を選ぶ","heading":"1.7 関心のある変数名を取得する","text":"データ分析の段階では，関心のある変数名を選択して，それらを代入する作業が頻出変数名手打ちだと時間もかかるしミスもあるので，効率化のために必ずおさえておきたい技術","code":""},{"path":"select.html","id":"全ての変数名","chapter":"1 変数（列）を選ぶ","heading":"1.7.1 全ての変数名","text":"","code":"\ndf %>% names()## [1] \"species\"           \"island\"            \"bill_length_mm\"   \n## [4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n## [7] \"sex\"               \"year\""},{"path":"select.html","id":"選択した変数名","chapter":"1 変数（列）を選ぶ","heading":"1.7.2 選択した変数名","text":"","code":"\nbill_vars <- \n  df %>% \n  select(starts_with(\"bill\")) %>% \n  names()\n\nbill_vars## [1] \"bill_length_mm\" \"bill_depth_mm\""},{"path":"select.html","id":"コピペに便利な形式に出力","chapter":"1 変数（列）を選ぶ","heading":"1.7.3 コピペに便利な形式に出力","text":",で区切られた形式で出てくればそのままselect()に入れられるのに…と思った方のための便利関数dput()\" \"すらもいらない，という時は，新しくr script(アイコンNew Fileまたはctrl + shift + n)開いて，dput()の出力を貼り付けてすべて置換する方法も","code":"\ndf %>% \n  select(starts_with(\"b\")) %>% # b縺九ｉ蟋九∪繧句､画焚蜷<8d>NAnames() %>% \n  dput()## c(\"bill_length_mm\", \"bill_depth_mm\", \"body_mass_g\")"},{"path":"select.html","id":"応用編複数データフレームで同時にselect","chapter":"1 変数（列）を選ぶ","heading":"1.8 【応用編】複数データフレームで同時にselect","text":"","code":""},{"path":"select.html","id":"複数データフレームで同じようにselect","chapter":"1 変数（列）を選ぶ","heading":"1.8.1 複数データフレームで同じようにselect","text":"","code":""},{"path":"select.html","id":"複数データフレームで別々にselect","chapter":"1 変数（列）を選ぶ","heading":"1.8.2 複数データフレームで別々にselect","text":"https://izunyan.github.io/practice_bfi/#13_%E3%82%AF%E3%83%AD%E3%83%B3%E3%83%90%E3%83%83%E3%82%AF%E3%81%AE%E3%82%A2%E3%83%AB%E3%83%95%E3%82%A1","code":""},{"path":"mutate.html","id":"mutate","chapter":"2 新しい変数（列）の作成","heading":"2 新しい変数（列）の作成","text":"パッケージdplyrの関数mutate()新しい変数の列を作成する\n既にある\n既にあるmutateの機能解説効率化のためのacross()","code":""},{"path":"mutate.html","id":"mutate_read","chapter":"2 新しい変数（列）の作成","heading":"2.1 データ読み込み","text":"国際パーソナリティ項目プールからの2800名分のデータ。質問項目が25問あり，5つの構成概念（ここでは因子という）に対応する項目への回答を足し合わせたスコアを計算する性，教育歴，年齢の変数もあり項目に対し想定される因子（因子名の頭文字が変数名と対応）\nAgree A1からA5\nConscientious　 C1からC5\nExtraversion E1からE5\nNeuroticism　 N1からN5\nOpenness　　 O1からO5\nAgree A1からA5Conscientious　 C1からC5Extraversion E1からE5Neuroticism　 N1からN5Openness　　 O1からO5回答選択肢\n1 Inaccurate まったくあてはまらない\n2 Moderately Inaccurate あてはまらない\n3 Slightly Inaccurate ややあてはまらない\n4 Slightly Accurate ややあてはまる\n5 Moderately Accurate あてはまる\n6 Accurate 非常にあてはまる\n1 Inaccurate まったくあてはまらない2 Moderately Inaccurate あてはまらない3 Slightly Inaccurate ややあてはまらない4 Slightly Accurate ややあてはまる5 Moderately Accurate あてはまる6 Accurate 非常にあてはまる","code":"\n# 繝代ャ繧ｱ繝ｼ繧ｸ縺悟<85>･縺｣縺ｦ縺ｪ縺代ｌ縺ｰ荳玖ｨ伜ｮ溯｡<8c>NA# install.packages(\"psychTools\")\n\ndf_bfi <- \n  psychTools::bfi %>% \n  as_tibble()         # 陦ｨ遉ｺ縺ｫ萓ｿ蛻ｩ縺ｪtibble蠖｢蠑上↓NA"},{"path":"mutate.html","id":"mutate1","chapter":"2 新しい変数（列）の作成","heading":"2.2 基本","text":"mutate( )の中に新しく作成する変数名を入れ，=でつないで計算式を入れるここでは，まず変数A1の平均値（全ケース同じ値が入る）を計算し，個々の値の差分をする例を示す","code":"\ndf_bfi %>% \n  select(A1) %>%                      # A1縺ｮ縺ｿ繧呈ｮ九☆NAmutate(\n    mean_a1 = mean(A1, na.rm = TRUE), # A1縺ｮ蟷ｳ蝮<87>蛟､繧剃ｽ懈<88>撰ｼ<88>NA縺ｯ髯､螟厄ｼ<89>NA= A1 - mean_a1)       # 蜷<84>蛟倶ｽ薙<81>ｮA1縺ｨ蟷ｳ蝮<87>蛟､縺ｮ蟾ｮ蛻<86>繧定ｨ育ｮ<97>NA## # A tibble: 2,800 x 3\n##      A1 mean_a1 dif_a1_mean\n##   <int>   <dbl>       <dbl>\n## 1     2    2.41      -0.413\n## 2     2    2.41      -0.413\n## 3     5    2.41       2.59 \n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"変数の型の変換","chapter":"2 新しい変数（列）の作成","heading":"2.3 変数の型の変換","text":"変数の型の確認は色々方法があるが，tibble形式のデータフレームならselect()でOK\ntibble形式でなくても，最後にglimpse()で確認可能\ntibble形式でなくても，最後にglimpse()で確認可能gender, education列が <int> になっているので整数型になっている","code":"\ndf_bfi %>% \n  select(gender, education)## # A tibble: 2,800 x 2\n##   gender education\n##    <int>     <int>\n## 1      1        NA\n## 2      2        NA\n## 3      2        NA\n## # ... with 2,797 more rows\ndf_bfi %>%\n  select(gender, education) %>%\n  glimpse()## Rows: 2,800\n## Columns: 2\n## $ gender    <int> 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, ~\n## $ education <int> NA, NA, NA, NA, NA, 3, NA, 2, 1, NA, 1, NA, N~"},{"path":"mutate.html","id":"型の変換","chapter":"2 新しい変数（列）の作成","heading":"2.3.1 型の変換","text":"ここでは，2つの数値型変数gender, educationを因子型に変換する例を示すそれぞれfactor()で因子型に変換gender, education列が <fct> になっているので整数型になっている","code":"\ndf_bfi %>%\n  select(gender, education) %>% \n  mutate(gender = factor(gender),\n         education = factor(education))## # A tibble: 2,800 x 2\n##   gender education\n##   <fct>  <fct>    \n## 1 1      <NA>     \n## 2 2      <NA>     \n## 3 2      <NA>     \n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"効率化複数の変数に対し一度の指定で実行","chapter":"2 新しい変数（列）の作成","heading":"2.3.1.1 【効率化】複数の変数に対し一度の指定で実行","text":"変換したい変数が大量にあるときは上記の方法では大変across()を使うと，指定した変数に対して同じ内容の処理なら 1回 ですむようになる\nかつてのmutate_at(), mutate_if()など\nかつてのmutate_at(), mutate_if()など","code":"\ndf_bfi %>%\n  mutate(across(c(gender, education),\n                factor)) %>% \n  select(gender, education)   # 邨先棡陦ｨ遉ｺ縺ｮ縺溘ａ蜀鈴聞縺縺悟､峨ｏ縺｣縺溷､画焚縺縺壮electNA## # A tibble: 2,800 x 2\n##   gender education\n##   <fct>  <fct>    \n## 1 1      <NA>     \n## 2 2      <NA>     \n## 3 2      <NA>     \n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"効率化acrossの特徴","chapter":"2 新しい変数（列）の作成","heading":"2.4 【効率化】across()の特徴","text":"変数の指定に@ref(select_helper)で解説したヘルパー関数が使える@ref(select_cha)で解説した文字も使える","code":"\ndf_bfi %>%\n  mutate(across(starts_with(\"n\"),\n                factor)) %>% \n  select(starts_with(\"n\"))   # 邨先棡陦ｨ遉ｺ縺ｮ縺溘ａNA## # A tibble: 2,800 x 5\n##   N1    N2    N3    N4    N5   \n##   <fct> <fct> <fct> <fct> <fct>\n## 1 3     4     2     2     3    \n## 2 3     3     3     5     5    \n## 3 4     5     4     2     3    \n## # ... with 2,797 more rows\nvars <- c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\")\n\ndf_bfi %>%\n  mutate(across(all_of(vars),\n                factor)) %>% \n  select(starts_with(\"n\"))   # 邨先棡陦ｨ遉ｺ縺ｮ縺溘ａNA## # A tibble: 2,800 x 5\n##   N1    N2    N3    N4    N5   \n##   <fct> <fct> <fct> <fct> <fct>\n## 1 3     4     2     2     3    \n## 2 3     3     3     5     5    \n## 3 4     5     4     2     3    \n## # ... with 2,797 more rows\ndf_bfi %>%\n  mutate(across(c(gender, education),\n                factor)) %>% \n  select(gender, education)   # 邨先棡陦ｨ遉ｺ縺ｮ縺溘ａ蜀鈴聞縺縺悟､峨ｏ縺｣縺溷､画焚縺縺壮electNA## # A tibble: 2,800 x 2\n##   gender education\n##   <fct>  <fct>    \n## 1 1      <NA>     \n## 2 2      <NA>     \n## 3 2      <NA>     \n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"合計点の作成","chapter":"2 新しい変数（列）の作成","heading":"2.5 合計点の作成","text":"","code":"\ndf_bfi_n <- \n  df_bfi %>%\n  select(N1:N5) %>%                       \n  mutate(neuroticism = N1 + N2 + N3 + N4 + N5)\n  \ndf_bfi_n## # A tibble: 2,800 x 6\n##      N1    N2    N3    N4    N5 neuroticism\n##   <int> <int> <int> <int> <int>       <int>\n## 1     3     4     2     2     3          14\n## 2     3     3     3     5     5          19\n## 3     4     5     4     2     3          18\n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"足し上げる変数に欠損があるとどうなるか","chapter":"2 新しい変数（列）の作成","heading":"2.5.1 足し上げる変数に欠損があるとどうなるか","text":"","code":"\ndf_bfi_n %>% \n  filter(is.na(neuroticism))     # neuroticism縺君A縺ｪ繧ｱ繝ｼ繧ｹ縺ｫ髯仙ｮ<9a>NA## # A tibble: 106 x 6\n##      N1    N2    N3    N4    N5 neuroticism\n##   <int> <int> <int> <int> <int>       <int>\n## 1     4     5     3     2    NA          NA\n## 2    NA     2     1     2     2          NA\n## 3     1     2     1     2    NA          NA\n## # ... with 103 more rows"},{"path":"mutate.html","id":"連番からidの作成","chapter":"2 新しい変数（列）の作成","heading":"2.6 連番からIDの作成","text":"dplyr::row_number()で行番号からIDを作成","code":"\ndf_bfi_n %>% \n  mutate(id = row_number())## # A tibble: 2,800 x 7\n##      N1    N2    N3    N4    N5 neuroticism    id\n##   <int> <int> <int> <int> <int>       <int> <int>\n## 1     3     4     2     2     3          14     1\n## 2     3     3     3     5     5          19     2\n## 3     4     5     4     2     3          18     3\n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"別解行の名前を直接変数化","chapter":"2 新しい変数（列）の作成","heading":"2.6.1 【別解】行の名前を直接変数化","text":"実はmutateを使わなくてもできて，データの最初に持ってこれる便利関数があるtibble::rowid_to_column()\nvar =で変数名を指定\nvar =で変数名を指定","code":"\ndf_bfi_n %>% \n  rowid_to_column(var = \"id\")## # A tibble: 2,800 x 7\n##      id    N1    N2    N3    N4    N5 neuroticism\n##   <int> <int> <int> <int> <int> <int>       <int>\n## 1     1     3     4     2     2     3          14\n## 2     2     3     3     3     5     5          19\n## 3     3     4     5     4     2     3          18\n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"逆転項目を作る","chapter":"2 新しい変数（列）の作成","heading":"2.7 逆転項目を作る","text":"","code":""},{"path":"mutate.html","id":"逆転項目の確認","chapter":"2 新しい変数（列）の作成","heading":"2.7.1 逆転項目の確認","text":"bfiデータの場合，どの項目を逆転する必要があるかを示す情報（-変数名で表現）がパッケージに含まれている\npsychTools::bfi.keys で確認可能\npsychTools::bfi.keys で確認可能したがって，“-A1”, “-C4”, “-C5”, “-E1”, “-E2”, “-O2”, “-O5”が対象","code":""},{"path":"mutate.html","id":"逆転","chapter":"2 新しい変数（列）の作成","heading":"2.7.2 逆転","text":"dplyr::recode()を使用入れ替えたい値をold = newで並べていく\nこの等式の順番が他と逆になるため，recode()は将来引退する可能性あり\nこの等式の順番が他と逆になるため，recode()は将来引退する可能性あり","code":"\ndf_bfi %>% \n  mutate(A1_r = recode(A1, `1` = 6, `2` = 5, `3` = 4, \n                           `4` = 3, `5` = 2, `6` = 1)) %>% \n  select(A1, A1_r)## # A tibble: 2,800 x 2\n##      A1  A1_r\n##   <int> <dbl>\n## 1     2     5\n## 2     2     5\n## 3     5     2\n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"変数2つ以上を逆転","chapter":"2 新しい変数（列）の作成","heading":"2.7.2.1 変数2つ以上を逆転","text":"A1と同様に同じ形をくり返し変数名だけ変えていけばできるが，コードが長くなりミスも生じやすくなる","code":"\ndf_bfi %>% \n  mutate(A1_r = recode(A1, `1` = 6, `2` = 5, `3` = 4, \n                           `4` = 3, `5` = 2, `6` = 1),\n         C4_r = recode(C4, `1` = 6, `2` = 5, `3` = 4, \n                           `4` = 3, `5` = 2, `6` = 1)) %>% \n  select(A1, A1_r, C4, C4_r)## # A tibble: 2,800 x 4\n##      A1  A1_r    C4  C4_r\n##   <int> <dbl> <int> <dbl>\n## 1     2     5     4     3\n## 2     2     5     3     4\n## 3     5     2     2     5\n## # ... with 2,797 more rows"},{"path":"mutate.html","id":"効率化-変数2つ以上を逆転","chapter":"2 新しい変数（列）の作成","heading":"2.7.2.2 【効率化】 変数2つ以上を逆転","text":"across()で変数名を指定し，適用したい関数","code":"\n  df_bfi %>% \n  mutate(across(c(A1, C4, C5, E1, E2, O2, O5),\n            list(r = ~recode(., `1` = 6, `2` = 5, `3` = 4, \n                          `4` = 3, `5` = 2, `6` = 1))\n            )\n  ) %>% \n  select(A1, A1_r, C4,  C4, C5, C5_r, E1, E1_r, E2, E2_r, O2, O2_r, O5, O5_r)## # A tibble: 2,800 x 13\n##      A1  A1_r    C4    C5  C5_r    E1  E1_r    E2  E2_r    O2\n##   <int> <dbl> <int> <int> <dbl> <int> <dbl> <int> <dbl> <int>\n## 1     2     5     4     4     3     3     4     3     4     6\n## 2     2     5     3     4     3     1     6     1     6     2\n## 3     5     2     2     5     2     2     5     4     3     2\n## # ... with 2,797 more rows, and 3 more variables: O2_r <dbl>,\n## #   O5 <int>, O5_r <dbl>"},{"path":"mutate.html","id":"区分変数","chapter":"2 新しい変数（列）の作成","heading":"2.8 2区分変数","text":"","code":"\n  # bfi_a %>% \n  # mutate(gender = fct_recode(gender, male   = \"1\", \n  #                                    female = \"2\"),\n  #        education = fct_recode(education, \"HS\" = \"1\",\n  #                                          \"finished HS\" = \"2\",\n  #                                          \"some college\" = \"3\",\n  #                                          \"college graduate\" = \"4\",\n  #                                          \"graduate degree\" = \"5\"\n  #                               )\n  # )"},{"path":"あとがき.html","id":"あとがき","chapter":"あとがき","heading":"あとがき","text":"あとがき本書の執筆にあたり、同人誌制作の先輩である天川榎@EnokiAmakawa氏から背中押し＆多くの助言をいただきました。この場を借りてお礼申し上げます。","code":""}]
